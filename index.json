[{"categories":null,"contents":"Terms  Corpus: A corpus is a language resource consisting of a large and structured set of texts. ml: Malayalam scheme identifier. Varnam scheme identifier doesn\u0026rsquo;t necessarily need to be a language code. Example: ml-inscript scheme exists too (for Malayalam with inscript layout). Frequency: How much a certain word is occuring Confidence: When varnam predicts, it picks words sorted by the highest confidence. This value of a word increases as user chooses it more [This process is called varnam learn]. Pack: A language pack is a new feature in Varnam. A language pack is a set of trained varnam files that can be imported into any Varnam instance. Public packs: https://kde.smc.org.in:8123/packs/ml  Prerequisites  Install libvarnam fork [branch merge-all-mychanges]  Importing New Words Into Varnam Ordinary File [Learn] Varnam can import Indic language words from a file :\nvarnamc -s ml --learn-from-file filename.txt filename.txt can be any kind of file, an HTML web page or any digital file where there are words to learn. Varnam finds words, calculate the frequency of that word in the file and learns from it. The frequency determines the confidence of that word i.e if the word \u0026ldquo;ഒരിക്കൽ\u0026rdquo; (orikkal) is found in the file 100 times and \u0026ldquo;ഒരിടത്ത്\u0026rdquo; (oriTathth) is found 50 times, then after learning, varnamc -s ml -t ori gives :\nഒരിക്കൽ ഒരിടത്ത് ഒരി Frequency File [Learn] A frequency file looks like this (\u0026lt;word\u0026gt; \u0026lt;frequency\u0026gt;) :\nമലയാളം 120 ഒരിക്കൽ 100 ഒരിടത്ത് 50 This file can be imported to Varnam with the same command :\nvarnamc -s ml --learn-from-file word-frequency.txt What\u0026rsquo;s different here is that the second frequency value is already calculated. These files are available here.\nTrained File Importing words using the two options above can be slow depending on the number of words, because Varnam has to learn and make patterns from each of those words.\nAn alternative is to import trained files. A trained file is an output from an existing Varnam installation. You can get an export from your Varnam installation with :\nmkdir folder varnamc -s ml --export-full folder Exporting might take a lot of time depending on the amount of words your Varnam installation have. The exported file is in JSON format. Sample :\n[ { \u0026#34;word\u0026#34;: \u0026#34;എന്നു\u0026#34;, \u0026#34;confidence\u0026#34;: 13079, \u0026#34;patterns\u0026#34;: [ { \u0026#34;pattern\u0026#34;: \u0026#34;ennu\u0026#34;, \u0026#34;learned\u0026#34;: 1 } ] }, { \u0026#34;word\u0026#34;: \u0026#34;എന്ന\u0026#34;, \u0026#34;confidence\u0026#34;: 12933, \u0026#34;patterns\u0026#34;: [ { \u0026#34;pattern\u0026#34;: \u0026#34;enna\u0026#34;, \u0026#34;learned\u0026#34;: 1 }, { \u0026#34;pattern\u0026#34;: \u0026#34;ennaa\u0026#34;, \u0026#34;learned\u0026#34;: 0 } ] }, ... ] The exported files can be imported to another Varnam installation with :\nvarnamc -s ml --import-learnings-from 0.words.txt This import will be considerably faster than importing using the learn methods above.\nMaking A Frequency File  Gather data from websites, social media etc. into .txt files. Sample :  ml-wikipedia-article-india.txt ml-wikipedia-article-kerala.txt How to gather data ? See section below\n Use this instruction to make a frequency report file from the previous .txt files.  Cleanup of .txt files is required to make the frequency output better. This can include fixing Unicode problems, common errors like :  Using 0 instead of anusvaram ( ം) Using Malayalam numeral ൪ (4) instead of ർ (both are visually similar BUT very different meanings, പയർ != പയ൪).   The frequency calculation is a time consuming process depending on number of files and content, so make sure input data is alright before doing it. What that script does :  Remove all characters except Malayalam Unicode block characters \u0026amp; ZWJ \u0026amp; NZWJ Remove unwanted newlines, whitespaces Make each line have a single word Sort Count unique occurences (frequency) of words Sort by the occurence number (frequency)     Use a text editor to display \u0026amp; edit large files. The report will be big and might have errors. You will have to fix this. Some suggestions :  Remove words that have less frequency (Perhaps lesser than 40 or 50 ?) Some words that have spelling mistakes might reach a higher frequency, find them and remove Remember that errored words will later turn out to be suggestions in varnam, so be cautious ! :) Remove words that are already collected. See below    The output report.txt will have the format we need to import to Varnam. This file can then be shared to anyone. But, since the learning process is slow, it\u0026rsquo;s better to share trained files.\nDepending on where the data is collected from, we can divide these frequency report files. Examples:\n wikipedia-frequency-report.txt (Words sourced from wikipedia) luca-frequency-report.txt (Science related words sourced from luca.co.in)  To remove same words from first frequency report :\nawk 'NR==FNR{a[$1]=1;next}!a[$1]' wikipedia-frequency-report.txt luca-frequency-report.txt \u0026gt; luca.txt Now luca.txt will only have words from luca-frequency-report.txt that is not in wikipedia-frequency-report.txt. This file can then be renamed ml-luca-pack and shared. Doing so, we can assume that ml-luca-pack will only have Science related words.\nTo combine words from two frequency reports (report1 \u0026amp; report2) :\nawk '{ count[$1] += $2 } END { for(elem in count) print elem, count[elem] }' report1 report2 | sort -gr -t \u0026quot; \u0026quot; -k 2 \u0026gt; report Now, report will have combined result. The frequency count will be summed up too.\nGather Data You will need to find ways to scrape data from websites (Python is mostly used for this) or use public datasets. Some scrapers :\n luca.co.in scraper Newspaper website scraper Instagram scraper  Public datasets:\n AI4Bharat-IndicNLP Dataset IndicNLP SMC Corpus  Making New Packs Doing a Varnam export will export all the files in the database. Instead, we\u0026rsquo;re gonna make separate trained files. These files are then made as packs. Example packs :\n https://kde.smc.org.in:8123/packs/ml (All Malayalam language packs) https://kde.smc.org.in:8123/packs/ml/ml-basic/ml-basic-1/download (Download pack ml-basic\u0026rsquo;s 1st version)  Here are the steps to make a pack :\n Make a folder for our pack (ml-basic)  mkdir ml-basic  Copy the frequency report file :  cp \u0026lt;path-to-frequency-report.txt\u0026gt; ./report  Set Varnam environment variables :  export VARNAM_SUGGESTIONS_DIR=$(realpath .) This makes Varnam store the learnings in the current folder. Any further varnam commands won\u0026rsquo;t reflect on your system\u0026rsquo;s varnam installation. The system varnam\u0026rsquo;s storage (learnings) file is at /home/\u0026lt;user\u0026gt;/.local/share/varnam/suggestions/ml.vst.learnings.\nIf you do varnamc -s ml -t hello, you will get only 1 suggestion because the current folder\u0026rsquo;s varnam learnings file doesn\u0026rsquo;t have anything in it. Let\u0026rsquo;s teach some words in the next step\n Make Varnam learn from the report :  varnamc -s ml --learn-from report This will make a SQLite database file in the current folder called ml.vst.learnings\n You can also make Varnam use a specific pattern for a word :  varnamc -s ml --train firefox=ഫയർഫോക്സ് This also gets stored in the ml.vst.learnings file. To import such words from a file, use varnamc --train-from\n Export the learnings from the file :  varnamc -s ml --export-full . There will be sometimes be more than one output. These outputs will be different versions of our pack. The outputs are sorted according to confidence. Less important words end up on last files. So, 0.words.txt will have the words of most importance.\n Change filenames according to our pack :  export PACK_PREFIX=ml-basic- i=1; find . -type f -name \u0026#34;*words.txt\u0026#34; | sort -V | while read filename; do mv $filename $PACK_PREFIX$i.vpf; i=$(($i+1)); done; This will change filenames like this :\n0.words.txt -\u0026gt; ml-basic-1.vpf 1.words.txt -\u0026gt; ml-basic-2.vpf 2.words.txt -\u0026gt; ml-basic-3.vpf VPF is Varnam Pack File. It\u0026rsquo;s basically just a text file with a fancy extension\n Make a file pack.json containing information about the pack :  { \u0026quot;identifier\u0026quot;: \u0026quot;ml-basic\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;Malayalam Basic\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;Collection of Malayalam words sourced from Wikipedia\u0026quot;, \u0026quot;lang\u0026quot;: \u0026quot;ml\u0026quot;, \u0026quot;versions\u0026quot;: [ { \u0026quot;identifier\u0026quot;: \u0026quot;ml-basic-1\u0026quot;, \u0026quot;version\u0026quot;: 1, \u0026quot;description\u0026quot;: \u0026quot;Words with highest confidence\u0026quot;, \u0026quot;size\u0026quot;: 12481353 }, { \u0026quot;identifier\u0026quot;: \u0026quot;ml-basic-2\u0026quot;, \u0026quot;version\u0026quot;: 2, \u0026quot;description\u0026quot;: \u0026quot;Words with confidence lesser than 95\u0026quot;, \u0026quot;size\u0026quot;: 11814988 }, { \u0026quot;identifier\u0026quot;: \u0026quot;ml-basic-3\u0026quot;, \u0026quot;version\u0026quot;: 3, \u0026quot;description\u0026quot;: \u0026quot;Words with confidence lesser than 3\u0026quot;, \u0026quot;size\u0026quot;: 10461558 }, { \u0026quot;identifier\u0026quot;: \u0026quot;ml-basic-4\u0026quot;, \u0026quot;version\u0026quot;: 4, \u0026quot;description\u0026quot;: \u0026quot;Words with confidence 1\u0026quot;, \u0026quot;size\u0026quot;: 7556327 } ] } The value of size is in bytes (Use ls -la to get size in bytes). The description for each version can be made according to the file\u0026rsquo;s contents. Open the file and find the highest confidence value (will be in the first line itself).\n That\u0026rsquo;s it! You\u0026rsquo;ve successfully made a pack, now zip the files and send it to Varnam maintainer :  zip pack.zip pack.json report ml-* ","permalink":"/docs/making-lang-pack/","tags":null,"title":"Making language pack and corpus"},{"categories":null,"contents":"Intro Cat ipsum dolor sit amet, nap all day yet proudly present butt to human but please stop looking at your phone and pet me, yet furrier and even more furrier hairball. Dismember a mouse and then regurgitate parts of it on the family room floor reward the chosen human with a slow blink find a way to fit in tiny box. Bring your owner a dead bird. Love and coo around boyfriend who purrs and makes the perfect moonlight eyes so i can purr and swat the glittery gleaming yarn to him\n","permalink":"/docs/faq/","tags":null,"title":"FAQ"},{"categories":null,"contents":null,"permalink":"/download/_index/","tags":null,"title":"Download"},{"categories":null,"contents":"To use Varnam on Linux, you need to install 3 things :\n GoVarnam Your Language Support Varnam IBus Engine  There is a simple quick way to install the above 3. Or you can install them step-by-step.\nQuick Install Open a terminal, paste this and press enter :\nbash \u0026lt;(curl -s https://raw.githubusercontent.com/varnamproject/govarnam/master/quick-installer.sh) Follow the instructions to complete installation.\nManual Here\u0026rsquo;s the way to install Varnam step-by-step.\n1. GoVarnam You will need to install GoVarnam library in your system for any app to use Varnam.\n  Download a recent GoVarnam version.\n  Extract the zip file\n  Go to the extracted folder\n  Now we need to run the install script\n Double click install.sh, and choose \u0026ldquo;Run In Terminal\u0026rdquo; Or for KDE, Right click, choose \u0026ldquo;Run In Konsole\u0026rdquo; Or right click on folder, choose \u0026ldquo;Open In Terminal\u0026rdquo;, type this and press enter:  ./install.sh   Type your password and press enter\n  Basic Installation is finished\n  Install your language from here\n  You may also install the IBus engine to use Varnam system wide: https://github.com/varnamproject/govarnam-ibus\nYou can now proceed to install the IBus Engine\n2. Language Support   Download your language support file from releases: https://github.com/varnamproject/schemes/releases\n  Extract zip\n  Go to the extracted folder\n  Open a terminal in your extracted folder\n  Now we need to run the install script\n Double click install.sh, and choose \u0026ldquo;Run In Terminal\u0026rdquo; Or for KDE, Right click, choose \u0026ldquo;Run In Konsole\u0026rdquo; Or right click on folder, choose \u0026ldquo;Open In Terminal\u0026rdquo;, type this and press enter:  ./install.sh   Type your password and press enter.\n  You will also be asked to import words for better suggestions. You may choose to import them all. You can manually import a Varnam Learnings File (VLF) by:\nvarnamcli -s ml -import \u0026#34;words.vlf\u0026#34;   To check if installation is successful, try this command :\nvarnamcli -s ml enthaa It should give malayalam suggestions if installation is successful.\n3. IBus Engine For Varnam An easy way to type Indian languages on GNU/Linux systems.\n Install and setup IBus: https://wiki.archlinux.org/title/IBus Download the latest release: https://github.com/varnamproject/govarnam-ibus/releases Extract the zip file Open the extracted folder Now we need to run the install script  Double click install.sh, and choose \u0026ldquo;Run In Terminal\u0026rdquo; Or for KDE, Right click, choose \u0026ldquo;Run In Konsole\u0026rdquo; Or right click on folder, choose \u0026ldquo;Open In Terminal\u0026rdquo;, type this and press enter:  ./install.sh  Type your password and press enter Restart ibus (no sudo) ibus restart  Go to IBus Settings -\u0026gt; Input Method and add Varnam input method. Maybe set an easy to use switch key to switch between languages (Default is Meta Key (Windows Key) + Space)  Uninstall You can uninstall each of the components with this same command on each of them:\nsudo ./install.sh uninstall ","permalink":"/download/linux/","tags":null,"title":""},{"categories":null,"contents":"Coming Soon.. ","permalink":"/download/mac/","tags":null,"title":""},{"categories":null,"contents":"Coming Soon.. ","permalink":"/download/windows/","tags":null,"title":""},{"categories":null,"contents":"Open Source Theme from Okkur for your next project.\nSyna is based on the awesome work by digitalcraftsman with his Hugo Agency Theme.\nThe Hugo Agency Theme was based on the work of David Miller with his Startupbootstrap Agency Theme.\nProvided with \u0026lt;3 by Okkur Labs\n To actually test out the full single page some Lorem Ipsum:\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a lorem urna. Quisque in neque malesuada, sollicitudin nunc porttitor, ornare est. Praesent ante enim, bibendum sed hendrerit et, iaculis laoreet felis. Morbi efficitur dui sit amet orci porttitor, nec tincidunt turpis elementum. Suspendisse rutrum, mi ac sollicitudin blandit, eros sem tincidunt enim, vitae feugiat turpis eros ut diam. Nunc hendrerit, nibh vitae dignissim pretium, magna nulla lacinia massa, et interdum lacus purus ultricies lacus. Nulla tincidunt quis lacus in posuere. Integer urna lorem, ultricies ut est vel, rhoncus euismod metus. Vestibulum luctus maximus massa, ut egestas est iaculis in. Nunc nisi dolor, sodales et imperdiet ut, lacinia ac justo. Phasellus ultrices risus cursus maximus lobortis. Vestibulum sagittis elementum dignissim. Suspendisse iaculis venenatis nisl, sed bibendum urna. Aliquam quis pellentesque tortor. Sed sed cursus nisl. Aenean eu lorem condimentum, feugiat mauris vitae, hendrerit tellus.\nMorbi ac sapien at risus volutpat tincidunt. Sed vel lobortis nisl. Sed mattis facilisis dui quis luctus. Aliquam bibendum venenatis tellus, non interdum nunc convallis in. Sed elementum aliquam tortor, vel consectetur sem sollicitudin sit amet. Nullam in elit turpis. Phasellus sagittis lacus massa, eu porta erat dapibus a. Phasellus placerat, nisi nec molestie accumsan, elit ex rutrum augue, ac pulvinar nulla nisl id velit. Pellentesque sapien dolor, tempus vitae elementum in, gravida ac arcu. Morbi facilisis, mi eget fringilla posuere, lorem ipsum euismod ex, id consequat lacus nisl ac tortor. Vivamus pulvinar dui non arcu lacinia faucibus. Vestibulum sapien leo, pretium in ligula et, aliquet mattis augue. Vestibulum tristique mi ultrices suscipit placerat. Nunc vehicula volutpat tellus sed fringilla.\nCurabitur ipsum ipsum, malesuada at tempus sed, pretium vulputate nunc. Praesent nec lectus ut mauris cursus hendrerit a vitae risus. Aliquam sodales lorem nisl, ut euismod dolor interdum ac. Vivamus facilisis justo vulputate augue finibus imperdiet. Aenean sem magna, tempus id orci eu, sodales pulvinar metus. Nullam pharetra ornare est. Vestibulum aliquet turpis et porttitor euismod. Nulla vitae orci orci. Suspendisse fringilla faucibus blandit. Nulla suscipit nulla ut massa elementum sollicitudin. Vivamus ultrices ipsum arcu, in vestibulum erat aliquam quis. Suspendisse eget mauris tellus. Maecenas euismod blandit odio, sed pellentesque orci mollis eget. Sed eget magna eu justo mollis hendrerit.\nSuspendisse molestie, tellus quis finibus facilisis, nulla neque euismod mi, at aliquet lectus arcu ac neque. Proin lacus augue, porttitor in odio vitae, sollicitudin laoreet mi. Donec posuere hendrerit augue hendrerit ornare. Duis vestibulum, nisl sit amet cursus lobortis, felis sapien consequat augue, et accumsan eros ligula id nisl. Praesent iaculis fringilla molestie. Sed consequat nec mi vel venenatis. Nunc felis dui, bibendum ac laoreet pretium, cursus ut orci. Nullam risus nulla, tempus ut bibendum quis, consectetur in risus.\nEtiam eget metus elit. Praesent turpis mi, malesuada nec libero a, cursus varius leo. In malesuada gravida est, nec maximus turpis posuere eu. Proin rutrum mattis lectus. Ut mi elit, tincidunt ut aliquet consequat, facilisis vitae arcu. Proin ut massa auctor, imperdiet sem ac, varius justo. Integer porta tellus quis eros sollicitudin mollis. Donec nulla sem, porttitor et velit vitae, tincidunt congue erat. Vivamus urna libero, viverra non pharetra eu, bibendum id arcu. In fermentum bibendum purus, vitae pharetra ipsum gravida quis. Nunc vitae congue diam. Maecenas pharetra orci vel magna fermentum, vitae auctor sapien consectetur. Nunc tempor erat vel nisi ullamcorper mollis. Sed et lectus accumsan, pharetra nunc scelerisque, finibus leo. Sed tempor eros nec nunc porta sodales.\n","permalink":"/about/","tags":null,"title":"About Syna"},{"categories":null,"contents":null,"permalink":"/docs/","tags":null,"title":"Docs"},{"categories":null,"contents":null,"permalink":"/download/","tags":null,"title":"Download"},{"categories":null,"contents":null,"permalink":"/","tags":null,"title":"Varnam - Type Indian Languages Easily"}]